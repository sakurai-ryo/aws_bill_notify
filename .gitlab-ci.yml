image: node:alpine
# image: node:slim

variables:
  DEST_DIR: dest/

stages:
  - unitTest
  - build
  - deployDev
  - deployPro

include: # 重複したパイプラインの作成を防ぐため
  - template: "Workflows/MergeRequest-Pipelines.gitlab-ci.yml"

Test:
  stage: unitTest
  rules: #if: '$CI_PIPELINE_SOURCE == "push"' # pushされた場合
    - when: always # 直前のステージでジョブの状態がどうであるかにかかわらずジョブを実行
  cache:
    key:
      files:
        - package.json # 依存関係が変更される度にキャッシュを更新するようにする
    paths:
      - node_modules
  before_script: #pwd => builds/sakurai-ryo/projectName
    - ls
    - npm i --progress=false # テストに必要なモジュールのインストール
    - mkdir -p dist dist/handler bundle bundle/nodejs
  script:
    - echo "---- Unit Test ----"
    - npm run test # jest

Build:
  stage: build
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: on_success
    # - if: '$CI_COMMIT_BRANCH == "master"' # masterへのpushの場合
    #   when: on_success # testが通った時のみ実行する
  cache:
    key:
      files:
        - package.json # 依存関係が変更される度にキャッシュを更新するようにする
    paths:
      - bundle/nodejs/node_modules # layerに使用するnode_modulesをキャッシュ
  artifacts: # webpackでbundleしたファイル次に引き継ぐ
    paths:
      - dist/
  script:
    - ls
    - echo "---- Layer Install ----"
    - npx ts-node process/setup.ts # package.jsonのdependenciesのみをインストール
    - echo "---- Build ----"
    - npm run build

DeployDev:
  stage: deployDev
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: on_success
    # - if: '$CI_COMMIT_BRANCH == "master"'
    #   when: on_success # test & buildが成功した時のみ
  dependencies:
    - Build
  script:
    - ls
    - echo "---- Deploy ----"
    - SYSTEM_ENV=dev npm run deploy # 環境変数で環境を分岐させる

DeployPro:
  stage: deployPro
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual # 本番環境へのデプロイは手動実行にする
  dependencies:
    - Build
  script:
    - echo "---- Deploy ----"
    - SYSTEM_ENV=pro npm run deploy
# cleanup:
#   stage: cleanup
#   script:
#     - rm -rf /home/gitlab/cache/xxx/yyy/${CI_COMMIT_REF_NAME}*
#   rules:
#     - when: always
