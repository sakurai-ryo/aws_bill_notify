image: node:alpine

stages:
  - unitTest
  - build
  - deployDev
  - deployPro

Test:
  stage: unitTest
  rules: #if: '$CI_PIPELINE_SOURCE == "push"' # pushされた場合
    - when: always # 直前のステージでジョブの状態がどうであるかにかかわらずジョブを実行
  cache:
    paths:
      - node_modules
  before_script:
    - npm i --progress=false # テストに必要なモジュールのインストール
    - mkdir bundle
    - mkdir bundle/nodejs
    - ls
  script:
    - echo "---- Unit Test ----"
    - npm run test # jest

Build:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"' #'$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"' masterへのcommitの場合 $CI_COMMIT_BRANCH
      when: on_success # testが通った時のみ実行する
  cache:
    paths:
      - bundle/nodejs/node_modules # layerに使用するnode_modulesをキャッシュ
      - node_modules
  script:
    - echo "---- Layer Install ----"
    - npx ts-node process/setup.ts # package.jsonのdependenciesのみをインストール
    - echo "---- Build ----"
    - npm run build

# TODO: credentialの取得
DeployDev:
  stage: deployDev
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  cache:
    paths:
      - bundle/nodejs/node_modules
      - node_modules
  script:
    - echo "---- Deploy ----"
    - SYSTEM_ENV=dev npm run deploy # 環境変数で環境を分岐させる

DeployPro:
  stage: deployPro
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual # 本番環境へのデプロイは手動実行にする
  cache:
    paths:
      - bundle/nodejs/node_modules
      - node_modules
  script:
    - echo "---- Deploy ----"
    - SYSTEM_ENV=pro npm run deploy
