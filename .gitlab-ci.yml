image: node:alpine
# image: node:slim

stages:
  - unitTest
  # - build
  # - deployDev
  # - deployPro

include: # 重複したパイプラインの作成を防ぐため
  - template: "Workflows/MergeRequest-Pipelines.gitlab-ci.yml"

Test:
  stage: unitTest
  rules: #if: '$CI_PIPELINE_SOURCE == "push"' # pushされた場合
    - when: always # 直前のステージでジョブの状態がどうであるかにかかわらずジョブを実行
  cache:
    paths:
      - node_modules
  before_script: #pwd => builds/sakurai-ryo/projectName
    - ls
    - npm i --progress=false # テストに必要なモジュールのインストール
    - mkdir bundle bundle/nodejs dist dist/handler
  script:
    - echo "---- Unit Test ----"
    - npm run test # jest

# Build:
#   stage: build
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
#       when: on_success
#     # - if: '$CI_COMMIT_BRANCH == "master"' # masterへのpushの場合
#     #   when: on_success # testが通った時のみ実行する
#   cache:
#     paths:
#       - bundle/nodejs/node_modules # layerに使用するnode_modulesをキャッシュ
#       - node_modules
#   # before_script:
#   #   - apk add bash
#   script:
#     - echo "---- Layer Install ----"
#     - npx ts-node process/setup.ts # package.jsonのdependenciesのみをインストール
#     - echo "---- Build ----"
#     - npm run build

# # TODO: credentialの取得
# DeployDev:
#   stage: deployDev
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
#       when: on_success
#     # - if: '$CI_COMMIT_BRANCH == "master"'
#     #   when: on_success # test & buildが成功した時のみ
#   cache:
#     paths:
#       - bundle/nodejs/node_modules
#       - node_modules
#   script:
#     - ls
#     - echo "---- Deploy ----"
#     - SYSTEM_ENV=dev npm run deploy # 環境変数で環境を分岐させる

# DeployPro:
#   stage: deployPro
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: manual # 本番環境へのデプロイは手動実行にする
#   cache:
#     paths:
#       - bundle/nodejs/node_modules
#       - node_modules
#   script:
#     - echo "---- Deploy ----"
#     - SYSTEM_ENV=pro npm run deploy
